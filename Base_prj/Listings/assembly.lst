


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             text, CODE, READONLY
    2 00000000                 EXPORT           Kalmanfilter_asm
    3 00000000         Kalmanfilter_asm
    4 00000000 E92D 0DF0       PUSH             {R4-R8,R10,R11}
    5 00000004         ;INITIALIZE THE LOOP;
    6 00000004 ECB2 0A01       VLDR.F32         S0, [R2], #0x04 ; float q
    7 00000008 ECF2 0A01       VLDR.F32         S1, [R2], #0x04 ; float r
    8 0000000C ECB2 1A01       VLDR.F32         S2, [R2], #0x04 ; float x
    9 00000010 ECF2 1A01       VLDR.F32         S3, [R2], #0x04 ; float p
   10 00000014 ED92 2A00       VLDR.F32         S4, [R2]    ; float k
   11 00000018         ; state data transfer complete
   12 00000018         ;LDR R3, [R3]       ; load value contained in length int
                       o R3
   13 00000018 F04F 0400       MOV              R4, #0      ; loop tracker 
   14 0000001C ED9F 3A14       VLDR.F32         S6, =0.0    ; initial value for
                                                             output[i]
   15 00000020         
   16 00000020         loop                                 ; loop definition
   17 00000020 429C            CMP              R4, R3
   18 00000022 DA1A            BGE              endfor      ; exit if condition
                                                             not met
   19 00000024 EE71 1A80       VADD.F32         S3, S3, S0  ; p = p + q
   20 00000028 EE31 4AA0       VADD.F32         S8, S3, S1  ; p + r
   21 0000002C EE81 2A84       VDIV.F32         S4, S3, S8  ; k = p / p + r
   22 00000030 ECF0 2A01       VLDR.F32         S5, [R0], #0x04 ; x_obs[i] = in
                                                            put_array[i]
   23 00000034 EE72 3AC3       VSUB.F32         S7, S5, S6  ; x_obs - x_pred[n-
                                                            1] 
   24 00000038 EEA2 3A23       VFMA.F32         S6, S4, S7  ; x_pre[n] = x[n-1]
                                                             + k*(message - x) 
                                                             
   25 0000003C EEF1 5A10       VMRS             R5, FPSCR   ; transfer FPSCR fl
                                                            ags to R5
   26 00000040 F005 0507       AND              R5,R5,#7    ; #15 FOR ALL FLAGS
                                                            
   27 00000044 2D00            CMP              R5, #0
   28 00000046 DC0D            BGT              enderror    ; branch if greater
                                                             than
   29 00000048         
   30 00000048 EE42 1A61       VMLS.F32         S3, S4, S3  ; p = (1-k)*p
   31 0000004C         ; take care of variables for next iteration
   32 0000004C ED81 3A00       VSTR.F32         S6, [R1]    ; store into output
                                                             array 
   33 00000050 F101 0104       ADD              R1, #0x04   ; increment output 
                                                            array index
   34 00000054 F104 0401       ADD              R4, R4, #1  ; increment loop in
                                                            dex 
   35 00000058 E7E2            B                loop        ; branch back to lo
                                                            op
   36 0000005A         endfor
   37 0000005A E8BD 0DF0       POP              {R11,R10,R4-R8}
   38 0000005E F04F 0000       MOV              R0, #0      ; Return value is 0
                                                             if correct executi
                                                            on
   39 00000062 4770            BX               LR
   40 00000064         enderror
   41 00000064 E8BD 0DF0       POP              {R11,R10,R4-R8}
   42 00000068 F04F 0001       MOV              R0, #1      ; Return value is 1
                                                             upon error



ARM Macro Assembler    Page 2 


   43 0000006C 4770            BX               LR
   44 0000006E                 END
              00 00 00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\assembly.d -o.\objects\assembly.o -IC:\Users\dsharm10
\426\426-microprcessors\Base_prj\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.5.0\CMSI
S\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.7.0\Drivers\CMSIS\Device\S
T\STM32F4xx\Include --predefine="__UVISION_VERSION SETA 515" --predefine="_RTE_
 SETA 1" --predefine="STM32F407xx SETA 1" --list=.\listings\assembly.lst Source
s\Assembly.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Kalmanfilter_asm 00000000

Symbol: Kalmanfilter_asm
   Definitions
      At line 3 in file Sources\Assembly.s
   Uses
      At line 2 in file Sources\Assembly.s
Comment: Kalmanfilter_asm used once
enderror 00000064

Symbol: enderror
   Definitions
      At line 40 in file Sources\Assembly.s
   Uses
      At line 28 in file Sources\Assembly.s
Comment: enderror used once
endfor 0000005A

Symbol: endfor
   Definitions
      At line 36 in file Sources\Assembly.s
   Uses
      At line 18 in file Sources\Assembly.s
Comment: endfor used once
loop 00000020

Symbol: loop
   Definitions
      At line 16 in file Sources\Assembly.s
   Uses
      At line 35 in file Sources\Assembly.s
Comment: loop used once
text 00000000

Symbol: text
   Definitions
      At line 1 in file Sources\Assembly.s
   Uses
      None
Comment: text unused
5 symbols
341 symbols in table
